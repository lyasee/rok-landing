{"version":3,"sources":["basic/Footer.tsx","basic/Header.tsx","component/AppItem.tsx","component/WebItem.tsx","home/HomePageTemplate.tsx","pages/HomePage.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Footer","FooterBlock","Container","Text","href","styled","footer","div","p","Header","HeaderBlock","Logo","header","h4","AppItem","name","icon","description","downloadLink","AppItemBlock","AppIcon","src","TextContainer","AppName","Description","DownloadButtonWrapper","target","rel","DownloadButton","DownloadText","img","h3","WebItem","url","status","WebIteBlock","WebIcon","WebIconText","Name","span","HomePageTemplate","Kimp","Maple","Water","RiseOfKingdom","CookieRunKingdom","HomePageTemplateBlock","AppListBox","AppListTitle","AppList","AppListItemWrapper","h1","HomePage","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","theme","document","getElementById"],"mappings":"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","file":"static/js/main.3eb16893.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Footer: React.FC = () => {\n  return (\n    <FooterBlock>\n      <Container>\n        <Text>\n          <a href=\"mailto:notice.rokgg@gmail.com\">Contact Us</a>\n        </Text>\n      </Container>\n    </FooterBlock>\n  );\n};\n\nexport default Footer;\n\nconst FooterBlock = styled.footer`\n  background-color: #1e2024;\n  min-height: 100px;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-end;\n`;\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst Text = styled.p`\n  color: #fff;\n\n  & > a {\n    color: #fff;\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\ninterface Props {}\n\nconst Header: React.FC<Props> = () => {\n  return (\n    <HeaderBlock>\n      <Logo>알오케이지지</Logo>\n    </HeaderBlock>\n  );\n};\n\nexport default Header;\n\nconst HeaderBlock = styled.header`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  padding-left: 20px;\n  padding-right: 20px;\n  height: 54px;\n  border-bottom: 1px solid #353b46;\n`;\n\nconst Logo = styled.h4`\n  margin: 0;\n  color: #fff;\n  font-family: \"NIXGONB-Vb\";\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\ninterface Props {\n  name: string;\n  icon: string;\n  description: string;\n  downloadLink?: string;\n}\n\nconst AppItem: React.FC<Props> = ({\n  name,\n  icon,\n  description,\n  downloadLink,\n}) => {\n  return (\n    <AppItemBlock>\n      <AppIcon src={icon} />\n      <TextContainer>\n        <AppName>{name}</AppName>\n        <Description>{description}</Description>\n\n        {downloadLink ? (\n          <DownloadButtonWrapper>\n            <a href={downloadLink} target=\"_blank\" rel=\"noreferrer\">\n              <DownloadButton>\n                <DownloadText>다운로드</DownloadText>\n              </DownloadButton>\n            </a>\n          </DownloadButtonWrapper>\n        ) : (\n          <DownloadButtonWrapper>\n            <DownloadButton>\n              <DownloadText>SOON</DownloadText>\n            </DownloadButton>\n          </DownloadButtonWrapper>\n        )}\n      </TextContainer>\n    </AppItemBlock>\n  );\n};\n\nexport default AppItem;\n\nconst AppItemBlock = styled.div`\n  display: flex;\n`;\n\nconst AppIcon = styled.img`\n  height: 100px;\n  width: 100px;\n  border-radius: 8px;\n`;\n\nconst TextContainer = styled.div`\n  margin-top: 4px;\n  margin-left: 16px;\n`;\n\nconst AppName = styled.h3`\n  color: #fff;\n  margin: 0;\n`;\n\nconst Description = styled.p`\n  margin: 4px 0;\n  color: #ccc;\n  font-size: 0.825rem;\n`;\n\nconst DownloadButtonWrapper = styled.div`\n  margin-top: 12px;\n  display: flex;\n  font-size: 0.725rem;\n`;\n\nconst DownloadButton = styled.div`\n  padding: 5px 8px;\n  background-color: #444343;\n  border-radius: 4px;\n`;\n\nconst DownloadText = styled.div`\n  color: #fff;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\ninterface Props {\n  name: string;\n  icon?: string;\n  description: string;\n  url?: string;\n  status?: string;\n}\n\nconst WebItem: React.FC<Props> = ({ name, icon, description, url, status }) => {\n  return (\n    <WebIteBlock>\n      <WebIcon>\n        <WebIconText>R</WebIconText>\n      </WebIcon>\n      <TextContainer>\n        <Name>{name}</Name>\n        <Description>{description}</Description>\n\n        {url ? (\n          <DownloadButtonWrapper>\n            <a href={url} target=\"_blank\" rel=\"noreferrer\">\n              <DownloadButton>\n                <DownloadText>바로가기</DownloadText>\n              </DownloadButton>\n            </a>\n          </DownloadButtonWrapper>\n        ) : (\n          <DownloadButtonWrapper>\n            <DownloadButton>\n              <DownloadText>{status || \"SOON\"}</DownloadText>\n            </DownloadButton>\n          </DownloadButtonWrapper>\n        )}\n      </TextContainer>\n    </WebIteBlock>\n  );\n};\n\nexport default WebItem;\n\nconst WebIteBlock = styled.div`\n  display: flex;\n`;\n\nconst WebIcon = styled.div`\n  height: 100px;\n  width: 100px;\n  border-radius: 8px;\n  background-color: #16161f;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst WebIconText = styled.span`\n  font-size: 2rem;\n  font-weight: bold;\n  color: #e28a18;\n`;\n\nconst TextContainer = styled.div`\n  margin-top: 4px;\n  margin-left: 16px;\n`;\n\nconst Name = styled.h3`\n  color: #fff;\n  margin: 0;\n`;\n\nconst Description = styled.p`\n  margin: 4px 0;\n  color: #ccc;\n  font-size: 0.825rem;\n`;\n\nconst DownloadButtonWrapper = styled.div`\n  margin-top: 12px;\n  display: flex;\n  font-size: 0.725rem;\n`;\n\nconst DownloadButton = styled.div`\n  padding: 5px 8px;\n  background-color: #444343;\n  border-radius: 4px;\n`;\n\nconst DownloadText = styled.div`\n  color: #fff;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\ninterface Props {\n  Header: React.ReactElement;\n  Footer: React.ReactElement;\n  Kimp: React.ReactElement;\n  Maple: React.ReactElement;\n  Water: React.ReactElement;\n  RiseOfKingdom: React.ReactElement;\n  CookieRunKingdom: React.ReactElement;\n}\n\nconst HomePageTemplate: React.FC<Props> = ({\n  Header,\n  Kimp,\n  Maple,\n  Water,\n  RiseOfKingdom,\n  CookieRunKingdom,\n  Footer,\n}) => {\n  return (\n    <HomePageTemplateBlock>\n      <div>\n        {Header}\n        <Container>\n          <AppListBox>\n            <AppListTitle>Apps</AppListTitle>\n            <AppList>\n              <AppListItemWrapper>{Kimp}</AppListItemWrapper>\n              <AppListItemWrapper>{Maple}</AppListItemWrapper>\n            </AppList>\n            <AppList>\n              <AppListItemWrapper>{Water}</AppListItemWrapper>\n              <AppListItemWrapper></AppListItemWrapper>\n            </AppList>\n          </AppListBox>\n          <AppListBox>\n            <AppListTitle>Webs</AppListTitle>\n            <AppList>\n              <AppListItemWrapper>{CookieRunKingdom}</AppListItemWrapper>\n              <AppListItemWrapper>{RiseOfKingdom}</AppListItemWrapper>\n            </AppList>\n          </AppListBox>\n        </Container>\n      </div>\n\n      {Footer}\n    </HomePageTemplateBlock>\n  );\n};\n\nexport default HomePageTemplate;\n\nconst HomePageTemplateBlock = styled.div`\n  background-color: #282c34;\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n`;\n\nconst Container = styled.div`\n  padding: 20px;\n  margin: 0 auto;\n  max-width: 1200px;\n`;\n\nconst AppListBox = styled.div`\n  padding-top: 16px;\n  margin: 0 auto;\n  max-width: 800px;\n`;\n\nconst AppListTitle = styled.h1`\n  color: #fff;\n`;\n\nconst AppList = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  margin-top: 42px;\n  margin-bottom: 72px;\n\n  @media (max-width: 1000px) {\n    margin: 0;\n  }\n`;\n\nconst AppListItemWrapper = styled.div`\n  width: 300px;\n\n  @media (max-width: 1000px) {\n    margin: 16px 0;\n  }\n`;\n","import React from \"react\";\nimport Footer from \"../basic/Footer\";\nimport Header from \"../basic/Header\";\nimport AppItem from \"../component/AppItem\";\nimport WebItem from \"../component/WebItem\";\nimport HomePageTemplate from \"../home/HomePageTemplate\";\n\nconst HomePage: React.FC = () => {\n  return (\n    <HomePageTemplate\n      Header={<Header />}\n      Footer={<Footer />}\n      Kimp={\n        <AppItem\n          name=\"김프 - 김치프리미엄\"\n          icon=\"/images/icon/kimp_appicon.png\"\n          description=\"실시간으로 확인하는 김프\"\n          downloadLink=\"https://kimpapp.page.link/default\"\n        />\n      }\n      Maple={\n        <AppItem\n          name=\"메코디 - 코디 시뮬레이터\"\n          icon=\"/images/icon/maple_appicon.png\"\n          description=\"룩덕이라면 필수앱\"\n          downloadLink=\"https://mapleapp.page.link/default\"\n        />\n      }\n      Water={\n        <AppItem\n          name=\"물타기 - scale trading\"\n          icon=\"/images/icon/water_appicon.png\"\n          description=\"10초만에 물타기\"\n          downloadLink=\"https://addwater.page.link/default\"\n        />\n      }\n      RiseOfKingdom={\n        <WebItem\n          name=\"라이즈 오브 킹덤즈\"\n          description=\"라오킹 티어표\"\n          status=\"서비스 종료\"\n        />\n      }\n      CookieRunKingdom={\n        <WebItem\n          name=\"쿠키런 킹덤\"\n          description=\"쿠키런 티어표\"\n          url=\"http://ck.rok.gg\"\n        />\n      }\n    />\n  );\n};\n\nexport default HomePage;\n","import HomePage from \"./pages/HomePage\";\n\nfunction App() {\n  return <HomePage />;\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { ThemeProvider } from \"styled-components\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={{}}>\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}